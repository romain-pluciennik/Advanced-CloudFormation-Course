Parameters:
 EnvironmentSize:
  Type: String
  Default: Small
  AllowedValues:
   - Small
   - Medium
   - Large
  Description: Select Environment Size (Small, Medium, Large)
 DatabaseName:
  Type: String
 DatabaseUser:
  Type: String
 DatabasePassword:
  Type: String
  NoEcho: true
 TestString:
  Type: String
  Default: test42
Mappings:
 RegionMap:
  us-east-1: # Northern Virginia
   "AMALINUX" : "ami-1853ac65" # AMALINUX Sept 2017
  us-east-2: # Ohio
   "AMALINUX" : "ami-25615740" # AMALINUX Sept 2017
  us-west-1: # Northern California
   "AMALINUX" : "ami-bf5540df" # AMALINUX Sept 2017
  us-west-2: # Oregon
   "AMALINUX" : "ami-d874e0a0" # AMALINUX Sept 2017
  ap-south-1: # Mumbai
   "AMALINUX" : "ami-7c87d913" # AMALINUX Sept 2017
  ap-northeast-2: # Seoul
   "AMALINUX" : "ami-5e1ab730" # AMALINUX Sept 2017
  ap-southeast-1: # Singapore
   "AMALINUX" : "ami-e2adf99e" # AMALINUX Sept 2017
  ap-southeast-2: # Sydney
   "AMALINUX" : "ami-43874721" # AMALINUX Sept 2017
  ap-northeast-1: # Tokyo
   "AMALINUX" : "ami-a77c30c1" # AMALINUX Sept 2017
  ca-central-1: # Canada (Central)
   "AMALINUX" : "ami-5b55d23f" # AMALINUX Sept 2017
  eu-central-1: # Frankfurt
   "AMALINUX" : "ami-ac442ac3" # AMALINUX Sept 2017
  eu-west-1: # Ireland
   "AMALINUX" : "ami-3bfab942" # AMALINUX Sept 2017
  eu-west-2: # London
   "AMALINUX" : "ami-dff017b8" # AMALINUX Sept 2017
  eu-west-3: # Paris
   "AMALINUX" : "ami-4f55e332" # AMALINUX Sept 2017
  sa-east-1: # Sao Polo
   "AMALINUX" : "ami-5339733f" # AMALINUX Sept 2017
 InstanceSize:
  Small:
   "EC2" : "t2.micro"
   "DB" : "db.t2.micro"
  Medium:
   "EC2" : "t2.small"
   "DB" : "db.t2.small"
  Large:
   "EC2" : "t2.medium"
   "DB" : "db.t2.medium"
Resources:
 DB:
  Type: "AWS::RDS::DBInstance"
  Properties:
   AllocatedStorage: 5
   DBInstanceClass: !FindInMap [InstanceSize, !Ref EnvironmentSize, DB] # Dynamic Mapping + Pseudo Parameter
   DBName: !Ref DatabaseName
   Engine: MySQL
   MasterUsername: !Ref DatabaseUser
   MasterUserPassword: !Ref DatabasePassword
 EC2:
  Type: "AWS::EC2::Instance"
  Properties:
   ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", AMALINUX] # Dynamic Mapping + Pseudo Parameter
   InstanceType: !FindInMap [InstanceSize, !Ref EnvironmentSize, EC2]
   KeyName: EC2Key
   UserData:
    "Fn::Base64":
     !Sub |
      #!/bin/bash
      yum update -y aws-cfn-bootstrap # Good practice - always do this
      /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource EC2 --configsets wordpress --region ${AWS::Region}
      yum update -y
  Metadata:
   AWS::CloudFormation::Init:
        configSets:
          wordpress:
            - "configure_cfn"
            - "install_wordpress"
            - "config_wordpress"
        configure_cfn:
          files:
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.EC2.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource EC2 --configsets wordpress --region ${AWS::Region}
              mode: "000400"
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
                verbose=true
                interval=5
              mode: "000400"
              owner: root
              group: root
            /var/www/html/index2.html:
              content: !Ref TestString
          services:
            sysvinit:
              cfn-hup:
                enabled: "true"
                ensureRunning: "true"
                files:
                  - "/etc/cfn/cfn-hup.conf"
                  - "/etc/cfn/hooks.d/cfn-auto-reloader.conf"
        install_wordpress:
          packages:
            yum:
              httpd: []
              php: []
              mysql: []
              php-mysql: []
          sources:
            /var/www/html: "http://wordpress.org/latest.tar.gz"
          services:
            sysvinit:
              httpd:
                enabled: "true"
                ensureRunning: "true"
        config_wordpress:
          commands:
            01_clone_config:
              cwd: "/var/www/html/wordpress"
              test: "test ! -e /var/www/html/wordpress/wp-config.php"
              command: "cp wp-config-sample.php wp-config.php"
            02_inject_dbhost:
              cwd: "/var/www/html/wordpress"
              command: !Sub |
                sed -i 's/localhost/${DB.Endpoint.Address}/g' wp-config.php
            03_inject_dbname:
              cwd: "/var/www/html/wordpress"
              command: !Sub |
                sed -i 's/database_name_here/${DatabaseName}/g' wp-config.php
            04_inject_dbuser:
              cwd: "/var/www/html/wordpress"
              command: !Sub |
                sed -i 's/username_here/${DatabaseUser}/g' wp-config.php
            05_inject_dbpassword:
              cwd: "/var/www/html/wordpress"
              command: !Sub |
                sed -i 's/password_here/${DatabasePassword}/g' wp-config.php
 S3:
  Type: "AWS::S3::Bucket"